{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents the different types of errors that can occur in the Etherlink bridge API.\n *\n * @typedef {('generic' | 'invalidSessionId' | 'walletRequestFailed' | 'invalidApiKey')} EtherlinkErrorType\n *\n * @property {'generic'} generic - A generic error type for unspecified errors.\n * @property {'invalidSessionId'} invalidSessionId - Error type indicating an invalid session ID.\n * @property {'walletRequestFailed'} walletRequestFailed - Error type indicating a failure in the wallet request.\n * @property {'invalidApiKey'} invalidApiKey - Error type indicating an invalid API key.\n */\nexport type EtherlinkErrorType = 'generic' | 'invalidSessionId' | 'walletRequestFailed' | 'invalidApiKey';\n\nexport type EtherlinkNetwork = 'mainnet' | 'ghostnet';\n\n// Start requests and responses\n\nexport interface EtherlinkConnectRequest {\n\ttype: 'connect';\n\tpayload: {\n\t\tapiKey: string;\n\t\tappName: string;\n\t\tappUrl: string;\n\t\tappIcon: string | undefined;\n\t\tnetwork: EtherlinkNetwork;\n\t};\n}\n\nexport interface EtherlinkConnectResponse {\n\ttype: 'connect';\n\tpayload: {\n\t\tsessionId: string;\n\t};\n}\n\nexport interface EtherlinkConnectedRequest {\n\ttype: 'connected';\n\tsessionId: string;\n}\n\nexport interface EtherlinkConnectedResponse {\n\ttype: 'connected';\n\tpayload: { connected: boolean };\n}\n\nexport interface EtherlinkRequestRequest {\n\ttype: 'request';\n\tsessionId: string;\n\tpayload: unknown;\n}\n\nexport interface EtherlinkRequestResponse {\n\ttype: 'request';\n\tpayload: unknown;\n}\n\nexport interface EtherlinkReconnectRequest {\n\ttype: 'reconnect';\n\tsessionId: string;\n}\n\nexport interface EtherlinkReconnectResponse {\n\ttype: 'reconnect';\n}\n\nexport interface EtherlinkDisconnectRequest {\n\ttype: 'disconnect';\n\tsessionId: string;\n}\n\nexport interface EtherlinkDisconnectResponse {\n\ttype: 'disconnect';\n}\n\nexport interface EtherlinkErrorResponse {\n\ttype: 'error';\n\tpayload:\n\t\t| {\n\t\t\t\ttype: Extract<EtherlinkErrorType, 'generic'>;\n\t\t\t\tkey: string;\n\t\t\t\tmessage?: string;\n\t\t  }\n\t\t| {\n\t\t\t\ttype: Exclude<EtherlinkErrorType, 'generic'>;\n\t\t\t\tmessage: string;\n\t\t  };\n}\n\nexport type EtherlinkRequest =\n\t| EtherlinkConnectRequest\n\t| EtherlinkConnectedRequest\n\t| EtherlinkRequestRequest\n\t| EtherlinkReconnectRequest\n\t| EtherlinkDisconnectRequest;\n\nexport type EtherlinkResponse =\n\t| EtherlinkConnectResponse\n\t| EtherlinkConnectedResponse\n\t| EtherlinkRequestResponse\n\t| EtherlinkReconnectResponse\n\t| EtherlinkDisconnectResponse;\n\n// End requests and responses\n\n// Start events\n\nexport interface EtherlinkConnectionStringEvent {\n\ttype: 'connectionString';\n\tpayload: {\n\t\tconnectionString: string;\n\t};\n}\n\nexport interface EtherlinkConnectEvent {\n\ttype: 'connect';\n\tpayload: {\n\t\tchainId: string;\n\t};\n}\n\nexport interface EtherlinkMessageEvent {\n\ttype: 'message';\n\tpayload: {\n\t\ttype: string;\n\t\tdata: unknown;\n\t};\n}\n\nexport interface EtherlinkChainChangedEvent {\n\ttype: 'chainChanged';\n\tpayload: string; // ChainId\n}\n\nexport interface EtherlinkAccountsChangedEvent {\n\ttype: 'accountsChanged';\n\tpayload: string[]; // Accounts\n}\n\nexport interface EtherlinkDisconnectEvent {\n\ttype: 'disconnect';\n\tpayload: {\n\t\tmessage: string;\n\t\tcode: number;\n\t\tdata?: unknown;\n\t};\n}\n\nexport type EtherlinkEvent =\n\t| EtherlinkConnectionStringEvent\n\t| EtherlinkConnectEvent\n\t| EtherlinkMessageEvent\n\t| EtherlinkChainChangedEvent\n\t| EtherlinkAccountsChangedEvent\n\t| EtherlinkDisconnectEvent;\n\n// End events\n"]}