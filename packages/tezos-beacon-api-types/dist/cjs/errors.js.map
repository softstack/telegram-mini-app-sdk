{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":";;;AAYA,MAAa,gBAAiB,SAAQ,KAAK;IAO1C,YAAY,SAAmD,EAAE,OAAgB;QAChF,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;CASD;AAnBD,4CAmBC;AAQM,MAAM,kBAAkB,GAAG,CAAC,KAAc,EAA6B,EAAE,CAAC,KAAK,YAAY,gBAAgB,CAAC;AAAtG,QAAA,kBAAkB,sBAAoF","sourcesContent":["import { TezosBeaconErrorType } from './types';\n\n/**\n * Represents an error specific to the Tezos Beacon Bridge API.\n *\n * @extends {Error}\n *\n * @param {Exclude<TezosBeaconErrorType, 'generic'>} errorType - The type of the error, excluding the 'generic' type.\n * @param {string} [message] - An optional message providing more details about the error.\n *\n * @property {Exclude<TezosBeaconErrorType, 'generic'>} errorType - The type of the error.\n */\nexport class TezosBeaconError extends Error {\n\t/**\n\t * Constructs a new instance of the error with the specified type and optional message.\n\t *\n\t * @param errorType - The type of the Tezos Beacon error, excluding the 'generic' type.\n\t * @param message - An optional message providing additional details about the error.\n\t */\n\tconstructor(errorType: Exclude<TezosBeaconErrorType, 'generic'>, message?: string) {\n\t\tsuper(message);\n\t\tthis.errorType = errorType;\n\t}\n\n\t/**\n\t * Represents the type of error encountered, excluding the generic error type.\n\t *\n\t * @readonly\n\t * @type {Exclude<TezosBeaconErrorType, 'generic'>}\n\t */\n\treadonly errorType: Exclude<TezosBeaconErrorType, 'generic'>;\n}\n\n/**\n * Type guard function to check if an error is an instance of `TezosBeaconError`.\n *\n * @param error - The error to check.\n * @returns A boolean indicating whether the error is an instance of `TezosBeaconError`.\n */\nexport const isTezosBeaconError = (error: unknown): error is TezosBeaconError => error instanceof TezosBeaconError;\n"]}