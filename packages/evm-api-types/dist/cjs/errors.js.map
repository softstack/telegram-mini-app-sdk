{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":";;;AAcA,MAAa,QAAS,SAAQ,KAAK;IAOlC,YAAY,SAA2C,EAAE,OAAgB;QACxE,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;CASD;AAnBD,4BAmBC;AAQM,MAAM,UAAU,GAAG,CAAC,KAAc,EAAqB,EAAE,CAAC,KAAK,YAAY,QAAQ,CAAC;AAA9E,QAAA,UAAU,cAAoE","sourcesContent":["import { EvmErrorType } from './types';\n\n/**\n * Represents an error specific to the EVM (Ethereum Virtual Machine) bridge context.\n * Extends the standard `Error` class to include an `errorType` property.\n *\n * @class\n * @extends {Error}\n *\n * @param {Exclude<EvmErrorType, 'generic'>} errorType - The specific type of EVM error, excluding 'generic'.\n * @param {string} [message] - An optional error message providing more details about the error.\n *\n * @property {Exclude<EvmErrorType, 'generic'>} errorType - The specific type of EVM error.\n */\nexport class EvmError extends Error {\n\t/**\n\t * Constructs an instance of the error with a specific type and optional message.\n\t *\n\t * @param errorType - The type of the error, excluding the 'generic' type.\n\t * @param message - An optional message providing additional details about the error.\n\t */\n\tconstructor(errorType: Exclude<EvmErrorType, 'generic'>, message?: string) {\n\t\tsuper(message);\n\t\tthis.errorType = errorType;\n\t}\n\n\t/**\n\t * Represents the type of EVM error, excluding the 'generic' type.\n\t *\n\t * @readonly\n\t * @type {Exclude<EvmErrorType, 'generic'>}\n\t */\n\treadonly errorType: Exclude<EvmErrorType, 'generic'>;\n}\n\n/**\n * Checks if the given error is an instance of EvmError.\n *\n * @param error - The error to check.\n * @returns True if the error is an instance of EvmError, false otherwise.\n */\nexport const isEvmError = (error: unknown): error is EvmError => error instanceof EvmError;\n"]}