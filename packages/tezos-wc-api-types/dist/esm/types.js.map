{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Represents the different types of errors that can occur in the Tezos WalletConnect API.\n *\n * @typedef {('generic' | 'invalidSessionId' | 'invalidApiKey' | 'walletRequestFailed')} TezosWcErrorType\n *\n * @property {'generic'} generic - A generic error type for unspecified errors.\n * @property {'invalidSessionId'} invalidSessionId - Error type indicating an invalid session ID.\n * @property {'invalidApiKey'} invalidApiKey - Error type indicating an invalid API key.\n * @property {'walletRequestFailed'} walletRequestFailed - Error type indicating that a wallet request has failed.\n */\nexport type TezosWcErrorType = 'generic' | 'invalidSessionId' | 'invalidApiKey' | 'walletRequestFailed';\n\n/**\n * Represents the available Tezos WalletConnect networks.\n *\n * @typedef {TezosWcNetwork}\n * @type {'mainnet' | 'ghostnet'}\n *\n * @property {'mainnet'} mainnet - The main Tezos network.\n * @property {'ghostnet'} ghostnet - The Tezos test network.\n */\nexport type TezosWcNetwork = 'mainnet' | 'ghostnet';\n\nexport interface TezosWcConnectRequest {\n\ttype: 'connect';\n\tpayload: {\n\t\tapiKey: string;\n\t\tnetwork: TezosWcNetwork;\n\t\tappName: string;\n\t\tappUrl: string;\n\t\tappIcon: string | undefined;\n\t};\n}\n\nexport interface TezosWcConnectResponse {\n\ttype: 'connect';\n\tpayload: {\n\t\tsessionId: string;\n\t};\n}\n\nexport interface TezosWcConnectedRequest {\n\ttype: 'connected';\n\tsessionId: string;\n}\n\nexport interface TezosWcConnectedResponse {\n\ttype: 'connected';\n\tpayload: { connected: boolean };\n}\n\nexport interface TezosWcRequestRequest {\n\ttype: 'request';\n\tsessionId: string;\n\tpayload:\n\t\t| {\n\t\t\t\tmethod: 'tezos_getAccounts';\n\t\t\t\tparams: Record<string, never>;\n\t\t  }\n\t\t| {\n\t\t\t\tmethod: 'tezos_send';\n\t\t\t\tparams: {\n\t\t\t\t\taccount: string;\n\t\t\t\t\topertions: Array<{\n\t\t\t\t\t\tkind: 'transaction';\n\t\t\t\t\t\tamount: string;\n\t\t\t\t\t\tdestination: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\t\t  }\n\t\t| {\n\t\t\t\tmethod: 'tezos_sign';\n\t\t\t\tparams: {\n\t\t\t\t\taccount: string;\n\t\t\t\t\tpayload: string;\n\t\t\t\t};\n\t\t  };\n}\n\nexport interface TezosWcRequestResponse {\n\ttype: 'request';\n\tpayload: unknown;\n}\n\nexport interface TezosWcReconnectRequest {\n\ttype: 'reconnect';\n\tsessionId: string;\n}\n\nexport interface TezosWcReconnectResponse {\n\ttype: 'reconnect';\n}\n\nexport interface TezosWcDisconnectRequest {\n\ttype: 'disconnect';\n\tsessionId: string;\n}\n\nexport interface TezosWcDisconnectResponse {\n\ttype: 'disconnect';\n}\n\nexport interface TezosWcErrorResponse {\n\ttype: 'error';\n\tpayload:\n\t\t| {\n\t\t\t\ttype: Extract<TezosWcErrorType, 'generic'>;\n\t\t\t\tkey: string;\n\t\t\t\tmessage?: string;\n\t\t  }\n\t\t| {\n\t\t\t\ttype: Exclude<TezosWcErrorType, 'generic'>;\n\t\t\t\tmessage: string;\n\t\t  };\n}\n\nexport type TezosWcRequest =\n\t| TezosWcConnectRequest\n\t| TezosWcConnectedRequest\n\t| TezosWcRequestRequest\n\t| TezosWcReconnectRequest\n\t| TezosWcDisconnectRequest;\n\nexport type TezosWcResponse =\n\t| TezosWcConnectResponse\n\t| TezosWcConnectedResponse\n\t| TezosWcRequestResponse\n\t| TezosWcReconnectResponse\n\t| TezosWcDisconnectResponse;\n\nexport interface TezosWcConnectionStringEvent {\n\ttype: 'connectionString';\n\tpayload: { connectionString: string };\n}\n\nexport interface TezosWcDisconnectEvent {\n\ttype: 'disconnect';\n}\n\nexport type TezosWcEvent = TezosWcConnectionStringEvent | TezosWcDisconnectEvent;\n"]}