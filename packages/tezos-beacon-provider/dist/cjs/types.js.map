{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"","sourcesContent":["export type Optional<T, K extends keyof T> = Partial<T> & Omit<T, K>;\n\n/**\n * Represents the supported Tezos Beacon wallet applications.\n *\n * @typedef {('altme' | 'kukai' | 'temple' | '_generic_')} TezosBeaconWalletApp\n *\n * @property {'altme'} altme - Altme wallet application.\n * @property {'kukai'} kukai - Kukai wallet application.\n * @property {'temple'} temple - Temple wallet application.\n * @property {'_generic_'} _generic_ - Generic wallet application.\n */\nexport type TezosBeaconWalletApp = 'altme' | 'kukai' | 'temple' | '_generic_';\n\n/**\n * Represents a serialized Tezos Beacon provider configuration.\n */\nexport interface SerializedTConnectTezosBeaconProvider {\n\t/**\n\t * The name of the application.\n\t */\n\tappName: string;\n\n\t/**\n\t * The URL of the application.\n\t */\n\tappUrl: string;\n\n\tappIcon: string | undefined;\n\n\t/**\n\t * The network configuration.\n\t */\n\tnetwork: Network;\n\n\t/**\n\t * The URL of the bridge.\n\t */\n\tbridgeUrl: string;\n\n\t/**\n\t * The wallet application for Tezos Beacon.\n\t */\n\twalletApp: TezosBeaconWalletApp | undefined;\n\n\t/**\n\t * The secret seed used for encryption or authentication.\n\t * @private\n\t */\n\t_secretSeed: string;\n\n\t/**\n\t * The API key for accessing services.\n\t * @private\n\t */\n\t_apiKey: string;\n\n\t/**\n\t * The generic wallet URL.\n\t * @private\n\t */\n\t_genericWalletUrl: string;\n\n\t/**\n\t * The communication controller identifier.\n\t * @private\n\t */\n\t_communicationController: string;\n\n\t/**\n\t * The session identifier.\n\t * @private\n\t */\n\t_sessionId: string;\n\n\t/**\n\t * The other party's public key.\n\t * @private\n\t */\n\t_otherPublicKey: Buffer;\n\n\t/**\n\t * The public key of the provider.\n\t * @private\n\t */\n\t_publicKey: string;\n}\n\n/**\n * Options for connecting to the Tezos Beacon provider.\n */\nexport interface TConnectTezosBeaconProviderOptions {\n\t/**\n\t * The name of the application.\n\t */\n\tappName: string;\n\n\t/**\n\t * The URL of the application.\n\t */\n\tappUrl: string;\n\n\tappIcon?: string;\n\n\t/**\n\t * The URL of the bridge server.\n\t */\n\tbridgeUrl: string;\n\n\t/**\n\t * The secret seed for encryption.\n\t */\n\tsecretSeed: string;\n\n\t/**\n\t * The API key for authentication.\n\t */\n\tapiKey: string;\n\n\t/**\n\t * The network configuration.\n\t */\n\tnetwork: Network;\n\n\t/**\n\t * Optional: The Tezos Beacon wallet application.\n\t */\n\twalletApp?: TezosBeaconWalletApp;\n\n\t/**\n\t * Optional: The URL of a generic wallet.\n\t */\n\tgenericWalletUrl?: string;\n}\n\n/**\n * Interface representing the events for connecting to the Tezos Beacon provider.\n */\nexport interface TConnectTezosBeaconProviderEvents {\n\tconnectionString: string;\n\tdisconnect: undefined;\n}\n\nexport interface PairingResponse {\n\ttype: 'p2p-pairing-response';\n\tid: string;\n\tname: string;\n\tversion: string;\n\tpublicKey: string; // hex\n\trelayServer: string; // domain\n\tappUrl?: string; // url\n\ticon?: string; // url\n}\n\n// Start tzip10\n\nexport type MessageType =\n\t| 'permission_request'\n\t| 'sign_payload_request'\n\t| 'operation_request'\n\t| 'broadcast_request'\n\t| 'permission_response'\n\t| 'sign_payload_response'\n\t| 'operation_response'\n\t| 'broadcast_response'\n\t| 'disconnect'\n\t| 'error'\n\t| 'acknowledge';\n\nexport type NetworkType = 'mainnet' | 'carthagenet' | 'custom' | 'ghostnet';\n\nexport type PermissionScope = 'sign' | 'operation_request' | 'threshold';\n\nexport type TezosOperationType =\n\t| 'origination'\n\t| 'delegation'\n\t| 'reveal'\n\t| 'transaction'\n\t| 'activate_account'\n\t| 'endorsement'\n\t| 'seed_nonce_revelation'\n\t| 'double_endorsement_evidence'\n\t| 'double_baking_evidence'\n\t| 'proposals'\n\t| 'ballot'\n\t| 'attestation'\n\t| 'preattestation'\n\t| 'preendorsement'\n\t| 'set_deposits_limit'\n\t| 'double_preattestation_evidence'\n\t| 'double_preendorsement_evidence'\n\t| 'attestation_with_slot'\n\t| 'endorsement_with_slot'\n\t| 'double_attestation_evidence'\n\t| 'failing_noop'\n\t| 'register_global_constant'\n\t| 'transfer_ticket'\n\t| 'increase_paid_storage'\n\t| 'update_consensus_key'\n\t| 'drain_delegate'\n\t| 'vdf_revelation'\n\t| 'event'\n\t| 'ticket_updates'\n\t| 'smart_rollup_originate'\n\t| 'smart_rollup_add_messages'\n\t| 'smart_rollup_execute_outbox_message'\n\t| 'smart_rollup_publish'\n\t| 'smart_rollup_cement'\n\t| 'smart_rollup_recover_bond'\n\t| 'smart_rollup_refute'\n\t| 'smart_rollup_timeout'\n\t| 'dal_publish_commitment';\n\nexport type ErrorType =\n\t| 'BROADCAST_ERROR'\n\t| 'NETWORK_NOT_SUPPORTED'\n\t| 'NO_ADDRESS_ERROR'\n\t| 'NO_PRIVATE_KEY_FOUND_ERROR'\n\t| 'NOT_GRANTED_ERROR'\n\t| 'PARAMETERS_INVALID_ERROR'\n\t| 'TOO_MANY_OPERATIONS'\n\t| 'TRANSACTION_INVALID_ERROR'\n\t| 'ABORTED_ERROR'\n\t| 'UNKNOWN_ERROR';\n\nexport type SigningType = 'raw' | 'operation' | 'micheline';\n\nexport interface AppMetadata {\n\tsenderId: string;\n\tname: string;\n\ticon?: string;\n}\n\nexport interface Network {\n\ttype: NetworkType;\n\tname?: string;\n\trpcUrl?: string;\n}\n\nexport interface TezosBaseOperation {\n\tkind: TezosOperationType;\n}\n\nexport interface TezosActivateAccountOperation extends TezosBaseOperation {\n\tkind: 'activate_account';\n\tpkh: string;\n\tsecret: string;\n}\n\nexport interface TezosBallotOperation extends TezosBaseOperation {\n\tkind: 'ballot';\n\tsource: string;\n\tperiod: string;\n\tproposal: string;\n\tballot: 'nay' | 'yay' | 'pass';\n}\n\nexport interface TezosBlockHeader {\n\tlevel: number;\n\tproto: number;\n\tpredecessor: string;\n\ttimestamp: string;\n\tvalidation_pass: number;\n\toperations_hash: string;\n\tfitness: string[];\n\tcontext: string;\n\tpriority: number;\n\tproof_of_work_nonce: string;\n\tsignature: string;\n}\n\nexport interface TezosDoubleBakingEvidenceOperation extends TezosBaseOperation {\n\tkind: 'double_baking_evidence';\n\tbh1: TezosBlockHeader;\n\tbh2: TezosBlockHeader;\n}\n\nexport interface TezosEndorsementOperation extends TezosBaseOperation {\n\tkind: 'endorsement';\n\tlevel: string;\n}\n\nexport interface TezosProposalOperation extends TezosBaseOperation {\n\tkind: 'proposals';\n\tperiod: string;\n\tproposals: string[];\n}\n\nexport interface TezosSeedNonceRevelationOperation extends TezosBaseOperation {\n\tkind: 'seed_nonce_revelation';\n\tlevel: string;\n\tnonce: string;\n}\n\nexport interface TezosDelegationOperation extends TezosBaseOperation {\n\tkind: 'delegation';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tdelegate?: string;\n}\n\nexport interface TezosOriginationOperation extends TezosBaseOperation {\n\tkind: 'origination';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tbalance: string;\n\tdelegate?: string;\n\tscript: string;\n}\n\nexport interface TezosRevealOperation extends TezosBaseOperation {\n\tkind: 'reveal';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tpublic_key: string;\n}\n\nexport interface TezosIncreasePaidStorageOperation extends TezosBaseOperation {\n\tkind: 'increase_paid_storage';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tamount: string;\n\tdestination: string;\n}\n\nexport interface TezosTransferTicketOperation extends TezosBaseOperation {\n\tkind: 'transfer_ticket';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tticket_contents: MichelineMichelsonV1Expression;\n\tticket_ty: MichelineMichelsonV1Expression;\n\tticket_ticketer: string;\n\tticket_amount: string;\n\tdestination: string;\n\tentrypoint: string;\n}\n\nexport type MichelsonPrimitives =\n\t| 'ADD'\n\t| 'IF_NONE'\n\t| 'SWAP'\n\t| 'set'\n\t| 'nat'\n\t| 'CHECK_SIGNATURE'\n\t| 'IF_LEFT'\n\t| 'LAMBDA'\n\t| 'Elt'\n\t| 'CREATE_CONTRACT'\n\t| 'NEG'\n\t| 'big_map'\n\t| 'map'\n\t| 'or'\n\t| 'BLAKE2B'\n\t| 'bytes'\n\t| 'SHA256'\n\t| 'SET_DELEGATE'\n\t| 'CONTRACT'\n\t| 'LSL'\n\t| 'SUB'\n\t| 'IMPLICIT_ACCOUNT'\n\t| 'PACK'\n\t| 'list'\n\t| 'PAIR'\n\t| 'Right'\n\t| 'contract'\n\t| 'GT'\n\t| 'LEFT'\n\t| 'STEPS_TO_QUOTA'\n\t| 'storage'\n\t| 'TRANSFER_TOKENS'\n\t| 'CDR'\n\t| 'SLICE'\n\t| 'PUSH'\n\t| 'False'\n\t| 'SHA512'\n\t| 'CHAIN_ID'\n\t| 'BALANCE'\n\t| 'signature'\n\t| 'DUG'\n\t| 'SELF'\n\t| 'EMPTY_BIG_MAP'\n\t| 'LSR'\n\t| 'OR'\n\t| 'XOR'\n\t| 'lambda'\n\t| 'COMPARE'\n\t| 'key'\n\t| 'option'\n\t| 'Unit'\n\t| 'Some'\n\t| 'UNPACK'\n\t| 'NEQ'\n\t| 'INT'\n\t| 'pair'\n\t| 'AMOUNT'\n\t| 'DIP'\n\t| 'ABS'\n\t| 'ISNAT'\n\t| 'EXEC'\n\t| 'NOW'\n\t| 'LOOP'\n\t| 'chain_id'\n\t| 'string'\n\t| 'MEM'\n\t| 'MAP'\n\t| 'None'\n\t| 'address'\n\t| 'CONCAT'\n\t| 'EMPTY_SET'\n\t| 'MUL'\n\t| 'LOOP_LEFT'\n\t| 'timestamp'\n\t| 'LT'\n\t| 'UPDATE'\n\t| 'DUP'\n\t| 'SOURCE'\n\t| 'mutez'\n\t| 'SENDER'\n\t| 'IF_CONS'\n\t| 'RIGHT'\n\t| 'CAR'\n\t| 'CONS'\n\t| 'LE'\n\t| 'NONE'\n\t| 'IF'\n\t| 'SOME'\n\t| 'GET'\n\t| 'Left'\n\t| 'CAST'\n\t| 'int'\n\t| 'SIZE'\n\t| 'key_hash'\n\t| 'unit'\n\t| 'DROP'\n\t| 'EMPTY_MAP'\n\t| 'NIL'\n\t| 'DIG'\n\t| 'APPLY'\n\t| 'bool'\n\t| 'RENAME'\n\t| 'operation'\n\t| 'True'\n\t| 'FAILWITH'\n\t| 'parameter'\n\t| 'HASH_KEY'\n\t| 'EQ'\n\t| 'NOT'\n\t| 'UNIT'\n\t| 'Pair'\n\t| 'ADDRESS'\n\t| 'EDIV'\n\t| 'CREATE_ACCOUNT'\n\t| 'GE'\n\t| 'ITER'\n\t| 'code'\n\t| 'AND';\n\nexport type MichelineMichelsonV1Expression =\n\t| { int: string }\n\t| { string: string } // eslint-disable-line id-blacklist\n\t| { bytes: string }\n\t| MichelineMichelsonV1Expression[]\n\t| {\n\t\t\tprim: MichelsonPrimitives;\n\t\t\targs?: MichelineMichelsonV1Expression[];\n\t\t\tannots?: string[];\n\t  };\n\nexport interface TezosTransactionParameters {\n\tentrypoint: 'default' | 'root' | 'do' | 'set_delegate' | 'remove_delegate' | string;\n\tvalue: MichelineMichelsonV1Expression;\n}\n\nexport interface TezosTransactionOperation extends TezosBaseOperation {\n\tkind: 'transaction';\n\tsource: string;\n\tfee: string;\n\tcounter: string;\n\tgas_limit: string;\n\tstorage_limit: string;\n\tamount: string;\n\tdestination: string;\n\tparameters?: TezosTransactionParameters;\n}\n\nexport type OmittedTezosOperationProps = 'source' | 'fee' | 'counter' | 'gas_limit' | 'storage_limit';\n\nexport type PartialTezosDelegationOperation = Optional<TezosDelegationOperation, OmittedTezosOperationProps>;\n\nexport type PartialTezosOriginationOperation = Optional<TezosOriginationOperation, OmittedTezosOperationProps>;\n\nexport type PartialTezosRevealOperation = Optional<TezosRevealOperation, OmittedTezosOperationProps>;\n\nexport type PartialTezosTransactionOperation = Optional<TezosTransactionOperation, OmittedTezosOperationProps>;\n\nexport type PartialTezosIncreasePaidStorageOperation = Optional<\n\tTezosIncreasePaidStorageOperation,\n\tOmittedTezosOperationProps\n>;\n\nexport type PartialTezosTransferTicketOperation = Optional<TezosTransferTicketOperation, OmittedTezosOperationProps>;\n\nexport type PartialTezosOperation =\n\t| TezosActivateAccountOperation\n\t| TezosBallotOperation\n\t| PartialTezosDelegationOperation\n\t| TezosDoubleBakingEvidenceOperation\n\t| TezosEndorsementOperation\n\t| PartialTezosOriginationOperation\n\t| TezosProposalOperation\n\t| PartialTezosRevealOperation\n\t| TezosSeedNonceRevelationOperation\n\t| PartialTezosTransactionOperation\n\t| PartialTezosIncreasePaidStorageOperation;\n\nexport interface BaseMessage {\n\ttype: MessageType;\n\tversion: string;\n\tid: string; // ID of the message. The same ID is used in the request and response\n\tsenderId: string; // ID of the sender. This is used to identify the sender of the message\n}\n\nexport interface PermissionRequest extends BaseMessage {\n\ttype: 'permission_request';\n\tappMetadata: AppMetadata;\n\tnetwork: Network;\n\tscopes: Array<PermissionScope>;\n}\n\nexport interface PermissionResponse extends BaseMessage {\n\ttype: 'permission_response';\n\tpublicKey: string;\n\tnetwork: Network;\n\tscopes: Array<PermissionScope>;\n\tthreshold?: {\n\t\tamount: string;\n\t\ttimeframe: string;\n\t};\n\tappMetadata?: AppMetadata;\n}\n\nexport interface OperationRequest extends BaseMessage {\n\ttype: 'operation_request';\n\tnetwork: Network;\n\toperationDetails: PartialTezosOperation[];\n\tsourceAddress: string;\n}\n\nexport interface OperationResponse extends BaseMessage {\n\ttype: 'operation_response';\n\ttransactionHash: string;\n}\n\nexport interface SignPayloadRequest extends BaseMessage {\n\ttype: 'sign_payload_request';\n\tpayload: string;\n\tsourceAddress: string;\n\tsigningType: SigningType; // This is not part of TZIP-10\n}\n\nexport interface SignPayloadResponse extends BaseMessage {\n\ttype: 'sign_payload_response';\n\tsignature: string; // Signature of the payload\n\tsigningType?: SigningType; // This is not part of TZIP-10\n}\n\nexport interface DisconnectMessage extends BaseMessage {\n\ttype: 'disconnect';\n}\n\nexport interface ErrorResponse extends BaseMessage {\n\ttype: 'error';\n\terrorType: ErrorType;\n}\n\nexport type IgnoredRequestInputProperties = 'id' | 'senderId' | 'version';\n\nexport type PermissionRequestInput = Omit<PermissionRequest, Exclude<IgnoredRequestInputProperties, 'id'>>;\n\nexport type OperationRequestInput = Omit<OperationRequest, IgnoredRequestInputProperties>;\n\nexport type SignPayloadRequestInput = Omit<SignPayloadRequest, IgnoredRequestInputProperties>;\n\nexport type DisconnectMessageInput = Omit<DisconnectMessage, IgnoredRequestInputProperties>;\n\n// End tzip10\n\nexport interface RequestSignPayloadInput {\n\tsigningType?: SigningType;\n\tpayload: string;\n\tsourceAddress?: string;\n}\n"]}