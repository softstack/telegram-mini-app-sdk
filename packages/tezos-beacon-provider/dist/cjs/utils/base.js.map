{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../src/utils/base.ts"],"names":[],"mappings":";;;AAMO,MAAM,QAAQ,GAAG,CAAC,KAA+B,EAAsB,EAAE;IAC/E,IAAI,CAAC;QACJ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAAC,MAAM,CAAC;QACR,OAAO,SAAS,CAAC;IAClB,CAAC;AACF,CAAC,CAAC;AANW,QAAA,QAAQ,YAMnB","sourcesContent":["/**\n * Converts a given value to a bigint.\n *\n * @param value - The value to convert. It can be of type bigint, number, or string.\n * @returns The converted bigint value, or undefined if the conversion fails.\n */\nexport const toBigint = (value: bigint | number | string): bigint | undefined => {\n\ttry {\n\t\treturn BigInt(value);\n\t} catch {\n\t\treturn undefined;\n\t}\n};\n"]}