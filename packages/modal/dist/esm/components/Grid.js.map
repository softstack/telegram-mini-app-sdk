{"version":3,"file":"Grid.js","sourceRoot":"","sources":["../../../src/components/Grid.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAkB,IAAI,EAAE,MAAM,OAAO,CAAC;AAC7C,OAAO,EAAE,EAAE,EAAE,MAAM,UAAU,CAAC;AAY9B,MAAM,CAAC,MAAM,IAAI,GAAG,IAAI,CAAY,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CAC1E,cAAK,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,KAAM,KAAK,YAC9C,QAAQ,GACJ,CACN,CAAC,CAAC;AAEH,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC","sourcesContent":["import { HTMLAttributes, memo } from 'react';\nimport { tw } from '../utils';\n\nexport type GridProps = HTMLAttributes<HTMLDivElement>;\n\n/**\n * A memoized Grid component that renders a div with a grid layout.\n *\n * @param {GridProps} props - The properties for the Grid component.\n * @param {string} [props.className] - Additional class names to apply to the grid.\n * @param {React.ReactNode} props.children - The content to be rendered inside the grid.\n * @returns {JSX.Element} The rendered grid component.\n */\nexport const Grid = memo<GridProps>(({ className, children, ...props }) => (\n\t<div className={tw('grid', className)} {...props}>\n\t\t{children}\n\t</div>\n));\n\nGrid.displayName = 'Grid';\n"]}