{"version":3,"file":"Row.js","sourceRoot":"","sources":["../../../../src/components/flex/Row.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAC5B,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAiB,MAAM,YAAY,CAAC;AAerD,MAAM,CAAC,MAAM,GAAG,GAAG,IAAI,CACtB,UAAU,CAA2B,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CAC3E,KAAC,QAAQ,IAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,KAAM,KAAK,YACzD,QAAQ,GACC,CACX,CAAC,CACF,CAAC;AAEF,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC","sourcesContent":["import { clsx } from 'clsx';\nimport { forwardRef, memo } from 'react';\nimport { BaseFlex, BaseFlexProps } from './BaseFlex';\n\nexport type RowProps = BaseFlexProps;\n\n/**\n * `Row` is a memoized functional component that uses `forwardRef` to pass down a ref to a `BaseFlex` component.\n * It renders its children within a `BaseFlex` component with a `flex-row` class and any additional class names provided.\n *\n * @param {RowProps} props - The properties passed to the `Row` component.\n * @param {React.ReactNode} props.children - The child elements to be rendered inside the `Row`.\n * @param {string} [props.className] - Additional class names to apply to the `Row`.\n * @param {React.Ref<HTMLDivElement>} ref - The ref to be forwarded to the `BaseFlex` component.\n *\n * @returns {JSX.Element} The rendered `Row` component.\n */\nexport const Row = memo(\n\tforwardRef<HTMLDivElement, RowProps>(({ children, className, ...props }) => (\n\t\t<BaseFlex className={clsx('flex-row', className)} {...props}>\n\t\t\t{children}\n\t\t</BaseFlex>\n\t)),\n);\n\nRow.displayName = 'Row';\n"]}