{"version":3,"file":"BaseFlex.js","sourceRoot":"","sources":["../../../../src/components/flex/BaseFlex.tsx"],"names":[],"mappings":";;;;AAAA,iCAAyD;AACzD,uCAAiC;AAepB,QAAA,QAAQ,GAAG,IAAA,YAAI,EAC3B,IAAA,kBAAU,EAAgC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CACrF,gCAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,IAAA,UAAE,EAAC,iBAAiB,EAAE,SAAS,CAAC,KAAM,KAAK,YACnE,QAAQ,GACJ,CACN,CAAC,CACF,CAAC;AAEF,gBAAQ,CAAC,WAAW,GAAG,UAAU,CAAC","sourcesContent":["import { forwardRef, HTMLAttributes, memo } from 'react';\nimport { tw } from '../../utils';\n\nexport type BaseFlexProps = HTMLAttributes<HTMLDivElement>;\n\n/**\n * `BaseFlex` is a memoized functional component that renders a flexible box container.\n * It uses `forwardRef` to pass down a ref to the underlying `div` element.\n *\n * @param {BaseFlexProps} props - The properties passed to the component.\n * @param {React.ReactNode} props.children - The child elements to be rendered inside the flex container.\n * @param {string} [props.className] - Additional class names to apply to the flex container.\n * @param {React.Ref<HTMLDivElement>} ref - The ref to be forwarded to the `div` element.\n *\n * @returns {JSX.Element} The rendered flex container.\n */\nexport const BaseFlex = memo(\n\tforwardRef<HTMLDivElement, BaseFlexProps>(({ children, className, ...props }, ref) => (\n\t\t<div ref={ref} className={tw('box-border flex', className)} {...props}>\n\t\t\t{children}\n\t\t</div>\n\t)),\n);\n\nBaseFlex.displayName = 'BaseFlex';\n"]}