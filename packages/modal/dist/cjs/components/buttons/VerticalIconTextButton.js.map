{"version":3,"file":"VerticalIconTextButton.js","sourceRoot":"","sources":["../../../../src/components/buttons/VerticalIconTextButton.tsx"],"names":[],"mappings":";;;;AAAA,+BAA4B;AAC5B,iCAA6B;AAE7B,qCAAkC;AAClC,wCAAqC;AACrC,6CAA2D;AAgB9C,QAAA,sBAAsB,GAAG,IAAA,YAAI,EAA8B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CAChH,wBAAC,uBAAU,IAAC,SAAS,EAAE,IAAA,WAAI,EAAC,gDAAgD,EAAE,SAAS,CAAC,KAAM,KAAK,aAClG,uBAAC,WAAI,IAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,iCAAiC,EAAC,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAI,EACvF,uBAAC,SAAG,IAAC,SAAS,EAAC,SAAS,YAAE,IAAI,GAAO,IACzB,CACb,CAAC,CAAC;AAEH,8BAAsB,CAAC,WAAW,GAAG,wBAAwB,CAAC","sourcesContent":["import { clsx } from 'clsx';\nimport { memo } from 'react';\nimport { IconType } from '../../types';\nimport { Row } from '../flex/Row';\nimport { Icon } from '../icons/Icon';\nimport { BaseButton, BaseButtonProps } from './BaseButton';\n\nexport interface VerticalIconTextButtonProps extends BaseButtonProps {\n\ticon: IconType;\n\ttext: string;\n}\n\n/**\n * `VerticalIconTextButton` is a memoized component that renders a button with an icon and text arranged vertically.\n *\n * @param {VerticalIconTextButtonProps} props - The properties for the button component.\n * @param {string} props.icon - The icon to be displayed in the button.\n * @param {string} props.text - The text to be displayed below the icon in the button.\n * @param {string} [props.className] - Additional class names to apply to the button.\n * @returns {JSX.Element} The rendered button component.\n */\nexport const VerticalIconTextButton = memo<VerticalIconTextButtonProps>(({ icon, text, className, ...props }) => (\n\t<BaseButton className={clsx('flex-col items-center justify-center gap-y-1.5', className)} {...props}>\n\t\t<Icon icon={icon} className=\"rounded-[0.5rem] object-contain\" height={48} width={48} />\n\t\t<Row className=\"text-xs\">{text}</Row>\n\t</BaseButton>\n));\n\nVerticalIconTextButton.displayName = 'VerticalIconTextButton';\n"]}