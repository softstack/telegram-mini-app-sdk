{"version":3,"file":"HorizontalIconTextButton.js","sourceRoot":"","sources":["../../../../src/components/buttons/HorizontalIconTextButton.tsx"],"names":[],"mappings":";;;;AAAA,+BAA4B;AAC5B,iCAA6B;AAE7B,qCAAkC;AAClC,wCAAqC;AACrC,6CAA2D;AAiB9C,QAAA,wBAAwB,GAAG,IAAA,YAAI,EAAgC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CACpH,wBAAC,uBAAU,IACV,SAAS,EAAE,IAAA,WAAI,EAAC,kEAAkE,EAAE,SAAS,CAAC,KAC1F,KAAK,aAET,uBAAC,WAAI,IAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAI,EAC3C,uBAAC,SAAG,IAAC,SAAS,EAAC,oDAAoD,YAAE,IAAI,GAAO,IACpE,CACb,CAAC,CAAC;AAEH,gCAAwB,CAAC,WAAW,GAAG,0BAA0B,CAAC","sourcesContent":["import { clsx } from 'clsx';\nimport { memo } from 'react';\nimport { IconType } from '../../types';\nimport { Row } from '../flex/Row';\nimport { Icon } from '../icons/Icon';\nimport { BaseButton, BaseButtonProps } from './BaseButton';\n\nexport interface HorizontalIconTextButtonProps extends BaseButtonProps {\n\ticon: IconType;\n\ttext: string;\n}\n\n/**\n * A memoized horizontal button component that displays an icon and text.\n *\n * @component\n * @param {HorizontalIconTextButtonProps} props - The properties for the button component.\n * @param {string} props.icon - The icon to be displayed in the button.\n * @param {string} props.text - The text to be displayed in the button.\n * @param {string} [props.className] - Additional class names to style the button.\n * @returns {JSX.Element} The rendered horizontal icon text button component.\n */\nexport const HorizontalIconTextButton = memo<HorizontalIconTextButtonProps>(({ icon, text, className, ...props }) => (\n\t<BaseButton\n\t\tclassName={clsx('h-5 flex-row items-center justify-center gap-x-1.5 text-lineGrey', className)}\n\t\t{...props}\n\t>\n\t\t<Icon icon={icon} height={20} width={20} />\n\t\t<Row className=\"text-xs text-primaryText dark:text-primaryTextDark\">{text}</Row>\n\t</BaseButton>\n));\n\nHorizontalIconTextButton.displayName = 'HorizontalIconTextButton';\n"]}