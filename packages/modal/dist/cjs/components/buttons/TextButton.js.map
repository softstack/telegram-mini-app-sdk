{"version":3,"file":"TextButton.js","sourceRoot":"","sources":["../../../../src/components/buttons/TextButton.tsx"],"names":[],"mappings":";;;;AAAA,+BAA4B;AAC5B,iCAA6B;AAC7B,6CAA2D;AAe9C,QAAA,UAAU,GAAG,IAAA,YAAI,EAAkB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,CAAC,CAClF,uBAAC,uBAAU,IACV,SAAS,EAAE,IAAA,WAAI,EACd,2HAA2H,EAC3H,SAAS,CACT,KACG,KAAK,YAER,IAAI,GACO,CACb,CAAC,CAAC;AAEH,kBAAU,CAAC,WAAW,GAAG,YAAY,CAAC","sourcesContent":["import { clsx } from 'clsx';\nimport { memo } from 'react';\nimport { BaseButton, BaseButtonProps } from './BaseButton';\n\nexport interface TextButtonProps extends BaseButtonProps {\n\ttext: string;\n}\n\n/**\n * A memoized text button component that renders a button with customizable text and class names.\n * It uses the `BaseButton` component and applies additional styles and properties.\n *\n * @param {TextButtonProps} props - The properties for the TextButton component.\n * @param {string} props.text - The text to be displayed inside the button.\n * @param {string} [props.className] - Additional class names to apply to the button.\n * @returns {JSX.Element} The rendered TextButton component.\n */\nexport const TextButton = memo<TextButtonProps>(({ text, className, ...props }) => (\n\t<BaseButton\n\t\tclassName={clsx(\n\t\t\t'items-center justify-center rounded-lg border border-solid border-lineGrey p-4 text-primaryText dark:text-primaryTextDark',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{text}\n\t</BaseButton>\n));\n\nTextButton.displayName = 'TextButton';\n"]}