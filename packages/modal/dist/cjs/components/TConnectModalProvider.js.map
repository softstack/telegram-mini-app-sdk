{"version":3,"file":"TConnectModalProvider.js","sourceRoot":"","sources":["../../../src/components/TConnectModalProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ETHERLINK_GHOSTNET_CHAIN_ID, ETHERLINK_MAINNET_CHAIN_ID } from '@tconnect.io/core';\nimport { EtherlinkNetwork as EtherlinkNetworkType } from '@tconnect.io/etherlink-api-types';\nimport { TConnectEtherlinkProvider } from '@tconnect.io/etherlink-provider';\nimport { TConnectTezosBeaconProvider, Network as TezosBeaconNetwork } from '@tconnect.io/tezos-beacon-provider';\nimport { TezosWcNetwork } from '@tconnect.io/tezos-wc-api-types';\nimport { TConnectTezosWcProvider } from '@tconnect.io/tezos-wc-provider';\nimport { createContext, memo, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport {\n\tETHERLINK_PROVIDER_STORAGE_KEY,\n\tNETWORKS,\n\tTEZOS_BEACON_PROVIDER_STORAGE_KEY,\n\tTEZOS_WC_PROVIDER_STORAGE_KEY,\n} from '../constants';\nimport { Step, TConnectModal } from '../modals/TConnectModal';\nimport { EtherlinkNetwork, Network, TConnectModalContextValue, TezosNetwork } from '../types';\nimport { handleError, nextVersion, useVersionedState } from '../utils';\n\n/**\n * Context for managing the state and actions related to the TConnect modal.\n *\n * @typedef {Object} TConnectModalContextValue\n * @property {Function} openModal - Function to open the modal.\n * @property {Function} closeModal - Function to close the modal.\n * @property {any} etherlinkProvider - Ethereum provider, if available.\n * @property {any} tezosBeaconProvider - Tezos Beacon provider, if available.\n * @property {any} tezosWcProvider - Tezos WalletConnect provider, if available.\n * @property {boolean} connected - Boolean indicating if a connection is established.\n */\nexport const TConnectModalContext = createContext<TConnectModalContextValue>({\n\topenModal: () => undefined,\n\tcloseModal: () => undefined,\n\tetherlinkProvider: undefined,\n\ttezosBeaconProvider: undefined,\n\ttezosWcProvider: undefined,\n\tconnected: false,\n});\n\nexport interface TConnectModalProviderProps {\n\tappName: string;\n\tappUrl: string;\n\tappIcon?: string;\n\tbridgeUrl: string;\n\tapiKey: string;\n\tnetworkFilter?: Array<'etherlink' | 'tezos'>;\n\tetherlinkNetwork?: EtherlinkNetworkType;\n\ttezosBeaconNetwork?: TezosBeaconNetwork;\n\ttezosWcNetwork?: TezosWcNetwork;\n\tchildren?: ReactNode | undefined;\n}\n\n/**\n * `TConnectModalProvider` is a React component that provides context and state management for connecting to various blockchain networks and wallets.\n * It handles the connection logic for Etherlink, Tezos Beacon, and Tezos WalletConnect providers, and manages the state of the connection modal.\n *\n * @param {TConnectModalProviderProps} props - The properties for the `TConnectModalProvider` component.\n * @param {string} props.bridgeUrl - The URL of the bridge server.\n * @param {string} props.apiKey - The API key for authentication.\n * @param {string[]} props.networkFilter - An array of network filters.\n * @param {React.ReactNode} props.children - The child components to be rendered within the provider.\n * @param {(error: unknown) => void} [props.onError] - Optional callback function to handle errors.\n *\n * @returns {JSX.Element} The `TConnectModalProvider` component.\n *\n * @example\n * ```tsx\n * <TConnectModalProvider\n *   bridgeUrl=\"https://bridge.example.com\"\n *   apiKey=\"your-api-key\"\n *   networkFilter={['mainnet', 'testnet']}\n *   onError={(error) => console.error(error)}\n * >\n *   <YourAppComponents />\n * </TConnectModalProvider>\n * ```\n */\nexport const TConnectModalProvider = memo<TConnectModalProviderProps>(\n\t({\n\t\tappName,\n\t\tappUrl,\n\t\tappIcon,\n\t\tbridgeUrl,\n\t\tapiKey,\n\t\tnetworkFilter,\n\t\tetherlinkNetwork,\n\t\ttezosBeaconNetwork,\n\t\ttezosWcNetwork,\n\t\tchildren,\n\t\t...props\n\t}) => {\n\t\tconst [showModal, setShowModal] = useState(false);\n\t\tconst [step, setStep] = useState<Step>('connect');\n\t\tconst [currentNetwork, setCurrentNetwork] = useState<Network | undefined>(undefined);\n\t\tconst [currentWallet, setCurrentWallet] = useState<Network['wallets'][0] | undefined>(undefined);\n\t\tconst [etherlinkProvider, setEtherlinkProvider] = useVersionedState<TConnectEtherlinkProvider | undefined>(\n\t\t\tundefined,\n\t\t);\n\t\tconst [tezosBeaconProvider, setTezosBeaconProvider] = useVersionedState<TConnectTezosBeaconProvider | undefined>(\n\t\t\tundefined,\n\t\t);\n\t\tconst [tezosWcProvider, setTezosWcProvider] = useVersionedState<TConnectTezosWcProvider | undefined>(undefined);\n\t\tconst [connected, setConnected] = useVersionedState(false);\n\n\t\tuseEffect(() => {\n\t\t\t(async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst item = sessionStorage.getItem(ETHERLINK_PROVIDER_STORAGE_KEY);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\tconst version = nextVersion();\n\t\t\t\t\t\tconst provider = await TConnectEtherlinkProvider.deserialize(item);\n\t\t\t\t\t\tsetEtherlinkProvider(version, provider);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [setEtherlinkProvider]);\n\n\t\tuseEffect(() => {\n\t\t\ttry {\n\t\t\t\tif (etherlinkProvider) {\n\t\t\t\t\tsessionStorage.setItem(ETHERLINK_PROVIDER_STORAGE_KEY, etherlinkProvider.serialize());\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem(ETHERLINK_PROVIDER_STORAGE_KEY);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, [etherlinkProvider]);\n\n\t\tuseEffect(() => {\n\t\t\t(async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst item = sessionStorage.getItem(TEZOS_BEACON_PROVIDER_STORAGE_KEY);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\tconst version = nextVersion();\n\t\t\t\t\t\tconst provider = await TConnectTezosBeaconProvider.deserialize(item);\n\t\t\t\t\t\tsetTezosBeaconProvider(version, provider);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [setTezosBeaconProvider]);\n\n\t\tuseEffect(() => {\n\t\t\ttry {\n\t\t\t\tif (tezosBeaconProvider) {\n\t\t\t\t\tsessionStorage.setItem(TEZOS_BEACON_PROVIDER_STORAGE_KEY, tezosBeaconProvider.serialize());\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem(TEZOS_BEACON_PROVIDER_STORAGE_KEY);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, [tezosBeaconProvider]);\n\n\t\tuseEffect(() => {\n\t\t\t(async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst item = sessionStorage.getItem(TEZOS_WC_PROVIDER_STORAGE_KEY);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\tconst version = nextVersion();\n\t\t\t\t\t\tconst provider = await TConnectTezosWcProvider.deserialize(item);\n\t\t\t\t\t\tsetTezosWcProvider(version, provider);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [setTezosWcProvider]);\n\n\t\tuseEffect(() => {\n\t\t\ttry {\n\t\t\t\tif (tezosWcProvider) {\n\t\t\t\t\tsessionStorage.setItem(TEZOS_WC_PROVIDER_STORAGE_KEY, tezosWcProvider.serialize());\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem(TEZOS_WC_PROVIDER_STORAGE_KEY);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, [tezosWcProvider]);\n\n\t\tconst openModal = useCallback(() => {\n\t\t\ttry {\n\t\t\t\tif (etherlinkProvider) {\n\t\t\t\t\tconst network = NETWORKS.find((network) => network.type === 'etherlink');\n\t\t\t\t\tif (network) {\n\t\t\t\t\t\tconst wallet = (network as EtherlinkNetwork).wallets.find(\n\t\t\t\t\t\t\t(wallet) => wallet.walletApp === etherlinkProvider.walletApp,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (wallet) {\n\t\t\t\t\t\t\tsetStep('connected');\n\t\t\t\t\t\t\tsetCurrentNetwork(network);\n\t\t\t\t\t\t\tsetCurrentWallet(wallet);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (tezosBeaconProvider) {\n\t\t\t\t\tconst network = NETWORKS.find((network) => network.type === 'tezos');\n\t\t\t\t\tif (network) {\n\t\t\t\t\t\tconst wallet = (network as TezosNetwork).wallets.find(\n\t\t\t\t\t\t\t(wallet) => wallet.bridge === 'beacon' && wallet.walletApp === tezosBeaconProvider.walletApp,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (wallet) {\n\t\t\t\t\t\t\tsetStep('connected');\n\t\t\t\t\t\t\tsetCurrentNetwork(network);\n\t\t\t\t\t\t\tsetCurrentWallet(wallet);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (tezosWcProvider) {\n\t\t\t\t\tconst network = NETWORKS.find((network) => network.type === 'tezos');\n\t\t\t\t\tif (network) {\n\t\t\t\t\t\tconst wallet = (network as TezosNetwork).wallets.find(\n\t\t\t\t\t\t\t(wallet) => wallet.bridge === 'wc' && wallet.walletApp === tezosWcProvider.walletApp,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (wallet) {\n\t\t\t\t\t\t\tsetStep('connected');\n\t\t\t\t\t\t\tsetCurrentNetwork(network);\n\t\t\t\t\t\t\tsetCurrentWallet(wallet);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsetStep('connect');\n\t\t\t\t\tsetCurrentNetwork(undefined);\n\t\t\t\t\tsetCurrentWallet(undefined);\n\t\t\t\t}\n\t\t\t\tsetShowModal(true);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, [etherlinkProvider, tezosBeaconProvider, tezosWcProvider]);\n\n\t\tconst closeModal = useCallback(async () => {\n\t\t\ttry {\n\t\t\t\tsetShowModal(false);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, []);\n\n\t\tconst handleChangeEtherlinkProvider = useCallback(\n\t\t\tasync (provider: TConnectEtherlinkProvider, chainId: bigint) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (etherlinkProvider) {\n\t\t\t\t\t\tawait etherlinkProvider.disconnect();\n\t\t\t\t\t}\n\n\t\t\t\t\tprovider.on('disconnect', () => {\n\t\t\t\t\t\tsetEtherlinkProvider(nextVersion(), (prevProvider) =>\n\t\t\t\t\t\t\tprevProvider === provider ? undefined : prevProvider,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\tsetEtherlinkProvider(nextVersion(), provider);\n\t\t\t\t\tif (chainId === ETHERLINK_MAINNET_CHAIN_ID || chainId === ETHERLINK_GHOSTNET_CHAIN_ID) {\n\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[etherlinkProvider, setEtherlinkProvider, closeModal],\n\t\t);\n\n\t\tconst handleChangeTezosBeaconProvider = useCallback(\n\t\t\tasync (provider: TConnectTezosBeaconProvider) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (tezosBeaconProvider) {\n\t\t\t\t\t\tawait tezosBeaconProvider.disconnect();\n\t\t\t\t\t}\n\n\t\t\t\t\tprovider.on('disconnect', (): void => {\n\t\t\t\t\t\tsetTezosBeaconProvider(nextVersion(), (prevProvider) =>\n\t\t\t\t\t\t\tprevProvider === provider ? undefined : prevProvider,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTezosBeaconProvider(nextVersion(), provider);\n\t\t\t\t\tcloseModal();\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[tezosBeaconProvider, setTezosBeaconProvider, closeModal],\n\t\t);\n\n\t\tconst handleChangeTezosWcProvider = useCallback(\n\t\t\tasync (provider: TConnectTezosWcProvider) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (tezosWcProvider) {\n\t\t\t\t\t\tawait tezosWcProvider.disconnect();\n\t\t\t\t\t}\n\n\t\t\t\t\tprovider.on('disconnect', (): void => {\n\t\t\t\t\t\tsetTezosWcProvider(nextVersion(), (prevProvider) => (prevProvider === provider ? undefined : prevProvider));\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTezosWcProvider(nextVersion(), provider);\n\t\t\t\t\tcloseModal();\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[tezosWcProvider, setTezosWcProvider, closeModal],\n\t\t);\n\n\t\tuseEffect(() => {\n\t\t\t(async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst version = nextVersion();\n\t\t\t\t\tconst tmpConnected = ((await etherlinkProvider?.connected()) || tezosBeaconProvider?.connected()) ?? false;\n\t\t\t\t\tsetConnected(version, tmpConnected);\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandleError(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}, [step, etherlinkProvider, tezosBeaconProvider, setConnected]);\n\n\t\tconst handleDisconnect = useCallback(async () => {\n\t\t\ttry {\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tetherlinkProvider?.disconnect(),\n\t\t\t\t\ttezosBeaconProvider?.disconnect(),\n\t\t\t\t\ttezosWcProvider?.disconnect(),\n\t\t\t\t]);\n\t\t\t\tsetEtherlinkProvider(nextVersion(), undefined);\n\t\t\t\tsetTezosBeaconProvider(nextVersion(), undefined);\n\t\t\t\tsetTezosWcProvider(nextVersion(), undefined);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error);\n\t\t\t}\n\t\t}, [\n\t\t\tetherlinkProvider,\n\t\t\ttezosBeaconProvider,\n\t\t\ttezosWcProvider,\n\t\t\tsetEtherlinkProvider,\n\t\t\tsetTezosBeaconProvider,\n\t\t\tsetTezosWcProvider,\n\t\t\tcloseModal,\n\t\t]);\n\n\t\tconst value = useMemo(\n\t\t\t() => ({\n\t\t\t\topenModal,\n\t\t\t\tcloseModal,\n\t\t\t\tetherlinkProvider,\n\t\t\t\ttezosBeaconProvider,\n\t\t\t\ttezosWcProvider,\n\t\t\t\tconnected,\n\t\t\t}),\n\t\t\t[openModal, closeModal, step, etherlinkProvider, tezosBeaconProvider, tezosWcProvider, connected],\n\t\t);\n\n\t\treturn (\n\t\t\t<TConnectModalContext.Provider value={value} {...props}>\n\t\t\t\t{children}\n\t\t\t\t{showModal && (\n\t\t\t\t\t<TConnectModal\n\t\t\t\t\t\tappName={appName}\n\t\t\t\t\t\tappUrl={appUrl}\n\t\t\t\t\t\tappIcon={appIcon}\n\t\t\t\t\t\tbridgeUrl={bridgeUrl}\n\t\t\t\t\t\tapiKey={apiKey}\n\t\t\t\t\t\tnetworkFilter={networkFilter}\n\t\t\t\t\t\tetherlinkNetwork={etherlinkNetwork}\n\t\t\t\t\t\ttezosBeaconNetwork={tezosBeaconNetwork}\n\t\t\t\t\t\ttezosWcNetwork={tezosWcNetwork}\n\t\t\t\t\t\tstep={step}\n\t\t\t\t\t\tonChangeStep={setStep}\n\t\t\t\t\t\tcurrentNetwork={currentNetwork}\n\t\t\t\t\t\tonChangeCurrentNetwork={setCurrentNetwork}\n\t\t\t\t\t\tcurrentWallet={currentWallet}\n\t\t\t\t\t\tonChangeCurrentWallet={setCurrentWallet}\n\t\t\t\t\t\tetherlinkProvider={etherlinkProvider}\n\t\t\t\t\t\tonChangeEtherlinkProvider={handleChangeEtherlinkProvider}\n\t\t\t\t\t\ttezosBeaconProvider={tezosBeaconProvider}\n\t\t\t\t\t\tonChangeTezosBeaconProvider={handleChangeTezosBeaconProvider}\n\t\t\t\t\t\ttezosWcProvider={tezosWcProvider}\n\t\t\t\t\t\tonChangeTezosWcProvider={handleChangeTezosWcProvider}\n\t\t\t\t\t\tonDisconnect={handleDisconnect}\n\t\t\t\t\t\tonClose={closeModal}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</TConnectModalContext.Provider>\n\t\t);\n\t},\n);\n\nTConnectModalProvider.displayName = 'TConnectModalProvider';\n\nexport const useTConnectModal = (): TConnectModalContextValue => useContext(TConnectModalContext);\n"]}