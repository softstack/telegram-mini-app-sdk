{"version":3,"file":"TConnectTezosWcProvider.js","sourceRoot":"","sources":["../../src/TConnectTezosWcProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tWalletDelegateParams,\n\tWalletFinalizeUnstakeParams,\n\tWalletIncreasePaidStorageParams,\n\tWalletOriginateParams,\n\tWalletProvider,\n\tWalletStakeParams,\n\tWalletTransferParams,\n\tWalletTransferTicketParams,\n\tWalletUnstakeParams,\n} from '@taquito/taquito';\nimport { isAndroid } from '@tconnect.io/dapp-utils';\nimport { CallbackController, parse, sleep, stringify, TypedEvent } from '@tconnect.io/core';\nimport { CommunicationController } from '@tconnect.io/dapp-communication';\nimport {\n\tEVENT_CHANNEL,\n\tREQUEST_CHANNEL,\n\tSOCKET_IO_PATH,\n\tTezosWcConnectedRequest,\n\tTezosWcConnectedResponse,\n\tTezosWcConnectRequest,\n\tTezosWcConnectResponse,\n\tTezosWcDisconnectRequest,\n\tTezosWcDisconnectResponse,\n\tTezosWcError,\n\tTezosWcEvent,\n\tTezosWcNetwork,\n\tTezosWcReconnectRequest,\n\tTezosWcReconnectResponse,\n\tTezosWcRequest,\n\tTezosWcRequestRequest,\n\tTezosWcRequestResponse,\n\tTezosWcResponse,\n} from '@tconnect.io/tezos-wc-api-types';\nimport WebApp from '@twa-dev/sdk';\nimport {\n\tGetAccountsResult,\n\tRequestSignPayloadInput,\n\tSerializedTConnectTezosWcProvider,\n\tTConnectTezosWcProviderEvents,\n\tTConnectTezosWcProviderOptions,\n\tTezosWcWalletApp,\n} from './types';\nimport { getWalletConnectUniversalLink } from './utils/utils';\nimport {\n\tisGetAccountsResult,\n\tisSendResult,\n\tisSignResult,\n\tvalidateTezosWcEvent,\n\tvalidateTezosWcResponse,\n} from './validation';\n\nexport class TConnectTezosWcProvider extends TypedEvent<TConnectTezosWcProviderEvents> implements WalletProvider {\n\tconstructor(options: TConnectTezosWcProviderOptions) {\n\t\tsuper();\n\t\tthis._apiKey = options.apiKey;\n\t\tthis.bridgeUrl = options.bridgeUrl;\n\t\tthis.walletApp = options.walletApp;\n\t\tthis.network = options.network ?? 'mainnet';\n\t\tthis._communicationController = new CommunicationController(\n\t\t\tthis.bridgeUrl,\n\t\t\tSOCKET_IO_PATH,\n\t\t\tREQUEST_CHANNEL,\n\t\t\tEVENT_CHANNEL,\n\t\t);\n\t}\n\n\treadonly bridgeUrl: string;\n\treadonly walletApp: TezosWcWalletApp | undefined;\n\treadonly network: TezosWcNetwork;\n\tprivate readonly _apiKey: string;\n\tprivate _communicationController: CommunicationController<TezosWcRequest, TezosWcResponse, TezosWcEvent>;\n\tprivate _sessionId: string | undefined;\n\tprivate _walletConnectUri: string | undefined;\n\tprivate _permissionRequestCallbacks = new CallbackController<void>(1000 * 60 * 60);\n\n\tasync permissionRequest(): Promise<void> {\n\t\tif (this._communicationController.connected()) {\n\t\t\tawait this.disconnect();\n\t\t}\n\t\tawait this._communicationController.connect();\n\t\tthis._communicationController.on('event', this._createTezosWcEventHandler());\n\t\tconst {\n\t\t\tpayload: { sessionId, walletConnectUri },\n\t\t} = await this._sendTezosWcRequest({\n\t\t\ttype: 'connect',\n\t\t\tpayload: { apiKey: this._apiKey, network: this.network },\n\t\t});\n\t\tthis._sessionId = sessionId;\n\t\tthis._walletConnectUri = walletConnectUri;\n\t\tconst callbackPromise = this._permissionRequestCallbacks.addCallback(sessionId);\n\t\tif (this.walletApp) {\n\t\t\t// Android needs a second reminder to open the link\n\t\t\tif (isAndroid()) {\n\t\t\t\tWebApp.openLink(getWalletConnectUniversalLink(this.walletApp, walletConnectUri), { try_instant_view: true });\n\t\t\t\tawait sleep(1000);\n\t\t\t\tWebApp.openLink(getWalletConnectUniversalLink(this.walletApp, walletConnectUri), { try_instant_view: true });\n\t\t\t} else {\n\t\t\t\tWebApp.openLink(getWalletConnectUniversalLink(this.walletApp, walletConnectUri));\n\t\t\t}\n\t\t}\n\t\tthis.emit('connectionString', walletConnectUri);\n\t\treturn callbackPromise;\n\t}\n\n\tasync connected(): Promise<boolean> {\n\t\tif (!this._sessionId || !this._communicationController.connected()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst response = await this._sendTezosWcRequest({\n\t\t\ttype: 'connected',\n\t\t\tsessionId: this._getSessionId(),\n\t\t});\n\t\treturn response.payload.connected;\n\t}\n\n\tasync disconnect(): Promise<void> {\n\t\ttry {\n\t\t\tawait this._sendTezosWcRequest({ type: 'disconnect', sessionId: this._getSessionId() });\n\t\t} finally {\n\t\t\tthis.emit('disconnect', undefined);\n\t\t\tthis._communicationController.disconnect();\n\t\t}\n\t}\n\n\tserialize(): string {\n\t\treturn stringify({\n\t\t\tbridgeUrl: this.bridgeUrl,\n\t\t\twalletApp: this.walletApp,\n\t\t\tnetwork: this.network,\n\t\t\t_apiKey: this._apiKey,\n\t\t\t_communicationController: this._communicationController.serialize(),\n\t\t\t_sessionId: this._getSessionId(),\n\t\t\t_walletConnectUri: this._getWalletConnectUri(),\n\t\t} satisfies SerializedTConnectTezosWcProvider);\n\t}\n\n\tstatic async deserialize(serialized: string): Promise<TConnectTezosWcProvider> {\n\t\tconst data = parse(serialized) as SerializedTConnectTezosWcProvider;\n\t\tconst provider = new TConnectTezosWcProvider({\n\t\t\tbridgeUrl: data.bridgeUrl,\n\t\t\tapiKey: data._apiKey,\n\t\t\twalletApp: data.walletApp,\n\t\t\tnetwork: data.network,\n\t\t});\n\t\tprovider._communicationController = CommunicationController.deserialize(data._communicationController);\n\t\tprovider._sessionId = data._sessionId;\n\t\tprovider._walletConnectUri = data._walletConnectUri;\n\t\tawait provider._reconnect();\n\t\treturn provider;\n\t}\n\n\tprivate async _reconnect(): Promise<void> {\n\t\tthis._communicationController.on('event', this._createTezosWcEventHandler());\n\t\tawait this._communicationController.connect();\n\t\tawait this._sendTezosWcRequest({ type: 'reconnect', sessionId: this._getSessionId() });\n\t}\n\n\t// Start WalletProvider\n\n\tasync getPKH(): Promise<string> {\n\t\tconst accounts = await this._getAccounts();\n\t\treturn accounts.address;\n\t}\n\n\tasync getPK(): Promise<string> {\n\t\tconst accounts = await this._getAccounts();\n\t\treturn accounts.pubkey;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tasync mapTransferParamsToWalletParams(params: () => Promise<WalletTransferParams>): Promise<any> {\n\t\tconst transferParameters = await params();\n\t\tconsole.log('mapTransferParamsToWalletParams()', transferParameters);\n\t\treturn {\n\t\t\taccount: await this.getPKH(),\n\t\t\toperations: [\n\t\t\t\t{\n\t\t\t\t\tkind: 'transaction',\n\t\t\t\t\tamount: transferParameters.amount,\n\t\t\t\t\tdestination: transferParameters.to,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapTransferTicketParamsToWalletParams(params: () => Promise<WalletTransferTicketParams>): Promise<any> {\n\t\tthrow new Error('mapTransferTicketParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapStakeParamsToWalletParams(params: () => Promise<WalletStakeParams>): Promise<any> {\n\t\tthrow new Error('mapStakeParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapUnstakeParamsToWalletParams(params: () => Promise<WalletUnstakeParams>): Promise<any> {\n\t\tthrow new Error('mapUnstakeParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapFinalizeUnstakeParamsToWalletParams(params: () => Promise<WalletFinalizeUnstakeParams>): Promise<any> {\n\t\tthrow new Error('mapFinalizeUnstakeParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapOriginateParamsToWalletParams(params: () => Promise<WalletOriginateParams>): Promise<any> {\n\t\tthrow new Error('mapOriginateParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapDelegateParamsToWalletParams(params: () => Promise<WalletDelegateParams>): Promise<any> {\n\t\tthrow new Error('mapDelegateParamsToWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n\tmapIncreasePaidStorageWalletParams(params: () => Promise<WalletIncreasePaidStorageParams>): Promise<any> {\n\t\tthrow new Error('mapIncreasePaidStorageWalletParams not implemented.');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tasync sendOperations(params: any[]): Promise<string> {\n\t\tconsole.log('sendOperations()', params);\n\t\tconst response = await this._sendTezosWcRequest({\n\t\t\ttype: 'request',\n\t\t\tsessionId: this._getSessionId(),\n\t\t\tpayload: {\n\t\t\t\tmethod: 'tezos_send',\n\t\t\t\tparams: params[0],\n\t\t\t},\n\t\t});\n\t\tif (!isSendResult(response.payload)) {\n\t\t\tthrow new Error('Invalid tezos_send response');\n\t\t}\n\t\treturn response.payload.operationHash;\n\t}\n\n\tasync sign(bytes: string, watermark?: Uint8Array): Promise<string> {\n\t\tif (watermark?.length !== 1 || watermark[0] !== 3) {\n\t\t\tthrow new Error('Watermark is not supported');\n\t\t}\n\t\tconst bytesBuffer = Buffer.concat([Buffer.from(watermark), Buffer.from(bytes, 'hex')]);\n\t\tconst watermarkedBytes = bytesBuffer.toString('hex');\n\t\treturn this.requestSignPayload({\n\t\t\tpayload: watermarkedBytes,\n\t\t\tsigningType: 'operation',\n\t\t\tsourceAddress: await this.getPKH(),\n\t\t});\n\t}\n\n\t// End WalletProvider\n\n\tasync requestSignPayload(input: RequestSignPayloadInput): Promise<string> {\n\t\tconst { signingType, payload, sourceAddress } = input;\n\t\tswitch (signingType) {\n\t\t\tcase 'operation': {\n\t\t\t\tif (!payload.startsWith('03')) {\n\t\t\t\t\tthrow new Error('When using signing type \"operation\", the payload must start with prefix \"03\"');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'micheline': {\n\t\t\t\tif (!payload.startsWith('05')) {\n\t\t\t\t\tthrow new Error('When using signing type \"micheline\", the payload must start with prefix \"05\"');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst response = await this._sendTezosWcRequest({\n\t\t\ttype: 'request',\n\t\t\tsessionId: this._getSessionId(),\n\t\t\tpayload: {\n\t\t\t\tmethod: 'tezos_sign',\n\t\t\t\tparams: {\n\t\t\t\t\taccount: sourceAddress ?? (await this.getPKH()),\n\t\t\t\t\tpayload,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\tif (!isSignResult(response.payload)) {\n\t\t\tthrow new Error('Invalid response');\n\t\t}\n\t\treturn response.payload.signature;\n\t}\n\n\tprivate _createTezosWcEventHandler() {\n\t\treturn (event: TezosWcEvent): void => {\n\t\t\ttry {\n\t\t\t\tconst validatedEvent = validateTezosWcEvent(event);\n\t\t\t\tswitch (validatedEvent.type) {\n\t\t\t\t\tcase 'connect': {\n\t\t\t\t\t\tthis._permissionRequestCallbacks.resolveCallback(validatedEvent.payload.sessionId);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'disconnect': {\n\t\t\t\t\t\tthis.emit('disconnect', undefined);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async _getAccounts(): Promise<GetAccountsResult[0]> {\n\t\tconst response = await this._sendTezosWcRequest({\n\t\t\ttype: 'request',\n\t\t\tsessionId: this._getSessionId(),\n\t\t\tpayload: { method: 'tezos_getAccounts', params: {} },\n\t\t});\n\t\tif (!isGetAccountsResult(response.payload)) {\n\t\t\tthrow new Error('Invalid tezos_getAccounts response');\n\t\t}\n\t\treturn response.payload[0];\n\t}\n\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcConnectRequest): Promise<TezosWcConnectResponse>;\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcConnectedRequest): Promise<TezosWcConnectedResponse>;\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcRequestRequest): Promise<TezosWcRequestResponse>;\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcReconnectRequest): Promise<TezosWcReconnectResponse>;\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcDisconnectRequest): Promise<TezosWcDisconnectResponse>;\n\tprivate async _sendTezosWcRequest(tezosRequest: TezosWcRequest): Promise<TezosWcResponse> {\n\t\tif (!this._communicationController.connected()) {\n\t\t\tthrow new Error(\"Can't send request without connection\");\n\t\t}\n\t\tconst tezosResponse = await this._communicationController.send(tezosRequest);\n\t\tconst validatedTezosResponse = validateTezosWcResponse(tezosResponse);\n\t\tif (validatedTezosResponse.type === 'error') {\n\t\t\tif (validatedTezosResponse.payload.type === 'generic') {\n\t\t\t\tlet errorMessage = `Error Code: ${validatedTezosResponse.payload.key}`;\n\t\t\t\tif (validatedTezosResponse.payload.message) {\n\t\t\t\t\terrorMessage += `: ${validatedTezosResponse.payload.message}`;\n\t\t\t\t}\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t} else {\n\t\t\t\tthrow new TezosWcError(validatedTezosResponse.payload.type, validatedTezosResponse.payload.message);\n\t\t\t}\n\t\t}\n\t\tif (tezosRequest.type !== validatedTezosResponse.type) {\n\t\t\tthrow new Error('Response type is different from request type');\n\t\t}\n\t\treturn tezosResponse;\n\t}\n\n\tprivate _getSessionId(): string {\n\t\tif (!this._sessionId) {\n\t\t\tthrow new Error('Session ID is not set');\n\t\t}\n\t\treturn this._sessionId;\n\t}\n\n\tprivate _getWalletConnectUri(): string {\n\t\tif (!this._walletConnectUri) {\n\t\t\tthrow new Error('WalletConnect URI is not set');\n\t\t}\n\t\treturn this._walletConnectUri;\n\t}\n}\n"]}