{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAGxC,MAAM,CAAC,MAAM,SAAS,GAAG,GAAY,EAAE;IACtC,MAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC9B,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;AACjD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,GAAY,EAAE;IAC3C,MAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC9B,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAgC,EAAE;IACnE,MAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC9B,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;IAC/B,IAAI,EAAE,EAAE,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC;QACnC,OAAO,SAAS,CAAC;IAClB,CAAC;SAAM,IAAI,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC;IACd,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { UAParser } from 'ua-parser-js';\nimport { OperatingSystem } from './types';\n\nexport const isAndroid = (): boolean => {\n\tconst parser = new UAParser();\n\treturn !!parser.getOS().name?.match(/android/i);\n};\n\nexport const isMobileSafari = (): boolean => {\n\tconst parser = new UAParser();\n\treturn !!parser.getBrowser().name?.match(/mobile safari/i);\n};\n\nexport const getOperatingSystem = (): OperatingSystem | undefined => {\n\tconst parser = new UAParser();\n\tconst os = parser.getOS().name;\n\tif (os?.match(/^Android(-x86)?$/)) {\n\t\treturn 'android';\n\t} else if (os?.match(/^iOS$/)) {\n\t\treturn 'ios';\n\t}\n};\n"]}